// <auto-generated />
using Data.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext)), Migration("20240826094306_initial-setup")]
    public   class IinitialsetupBase
    {
        /// <inheritdoc />
        protected   void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Model.General.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("AmountReceived")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ChangeToReturn")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Data.Model.General.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PriceTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Data.Model.General.PriceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriceTypeCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PriceTypeCategoryId");

                    b.ToTable("PriceTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7593),
                            Deleted = false,
                            DisplayOrder = 0L,
                            Guid = new Guid("40c71c59-c1f6-438c-9aea-507a8d8e26c8"),
                            Name = "Standard",
                            PriceTypeCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7597),
                            Deleted = false,
                            DisplayOrder = 0L,
                            Guid = new Guid("faabb83e-d671-4969-a566-903c69561acf"),
                            Name = "Bulk",
                            PriceTypeCategoryId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7599),
                            Deleted = false,
                            DisplayOrder = 0L,
                            Guid = new Guid("a20decfd-9ea8-49e8-b437-7762a497515a"),
                            Name = "Holiday Special",
                            PriceTypeCategoryId = 3
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7600),
                            Deleted = false,
                            DisplayOrder = 0L,
                            Guid = new Guid("d7ba9991-b517-415a-9513-45e2ec975659"),
                            Name = "Clearance",
                            PriceTypeCategoryId = 4
                        });
                });

            modelBuilder.Entity("Data.Model.General.PriceTypeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ChildCategoryId")
                        .HasColumnType("int");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChildCategoryId");

                    b.ToTable("PriceTypeCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            ChildCategoryId = 1,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7566),
                            Deleted = false,
                            DisplayOrder = 0L,
                            Guid = new Guid("e2e39fed-1d5b-4a12-92a7-e6f7f06fbb2f"),
                            Name = "Retail Price"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            ChildCategoryId = 2,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7568),
                            Deleted = false,
                            DisplayOrder = 0L,
                            Guid = new Guid("f2e60670-868e-4536-a97b-3d41d0b97e01"),
                            Name = "Wholesale Price"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            ChildCategoryId = 3,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7570),
                            Deleted = false,
                            DisplayOrder = 0L,
                            Guid = new Guid("fb23916c-ecd0-425e-80d6-9f756e42d01e"),
                            Name = "Discounted Price"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            ChildCategoryId = 4,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7571),
                            Deleted = false,
                            DisplayOrder = 0L,
                            Guid = new Guid("80aaac37-a6a9-4a7c-bfdd-93f586419f50"),
                            Name = "Special Price"
                        });
                });

            modelBuilder.Entity("Data.Model.General.ProductPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ChildCategoryId")
                        .HasColumnType("int");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("PriceTypeCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("PriceTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChildCategoryId");

                    b.HasIndex("PriceTypeCategoryId");

                    b.HasIndex("PriceTypeId");

                    b.ToTable("ProductPrices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            ChildCategoryId = 1,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7623),
                            Deleted = false,
                            DisplayOrder = 0L,
                            Guid = new Guid("391c4a52-fc72-4813-b904-8a3cbacf4186"),
                            Price = 999m,
                            PriceTypeCategoryId = 1,
                            PriceTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            ChildCategoryId = 2,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7627),
                            Deleted = false,
                            DisplayOrder = 0L,
                            Guid = new Guid("b8b8622d-b038-4fb2-a2e4-a67e86f3140b"),
                            Price = 1999m,
                            PriceTypeCategoryId = 2,
                            PriceTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            ChildCategoryId = 3,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7629),
                            Deleted = false,
                            DisplayOrder = 0L,
                            Guid = new Guid("c1032f3d-4611-422a-a036-5f6b461d9367"),
                            Price = 499m,
                            PriceTypeCategoryId = 3,
                            PriceTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            ChildCategoryId = 4,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7630),
                            Deleted = false,
                            DisplayOrder = 0L,
                            Guid = new Guid("54d6a978-92f9-46bb-8d06-f01f714c8042"),
                            Price = 299m,
                            PriceTypeCategoryId = 4,
                            PriceTypeId = 4
                        });
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ChildCategoryId")
                        .HasColumnType("int");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InventoryItemId")
                        .HasColumnType("int");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChildCategoryId");

                    b.HasIndex("InventoryItemId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.InventoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("InventoryItems");
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.InventoryTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("InventoryItemId")
                        .HasColumnType("int");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("Transaction")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InventoryItemId");

                    b.ToTable("InventoryTransactions");
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InventoryItemId")
                        .HasColumnType("int");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InventoryItemId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.RecipeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("CompanyCostMargin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InventoryItemId")
                        .HasColumnType("int");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NetUnitCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("NewQuantity")
                        .HasColumnType("int");

                    b.Property<int>("OldQuantity")
                        .HasColumnType("int");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalUnitCompanyPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalUnitNetCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InventoryItemId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.SupplierItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("SupplierItems");
                });

            modelBuilder.Entity("Data.Model.SiteCategory.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DiscountActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowInMenu")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7456),
                            Deleted = false,
                            Description = "All electronic items",
                            DiscountActive = false,
                            DiscountPercentage = 0m,
                            DisplayOrder = 0L,
                            Guid = new Guid("10137f0d-f4f9-43e8-9aad-b7327acaf29a"),
                            Name = "Electronics",
                            ShowInMenu = true
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7461),
                            Deleted = false,
                            Description = "Apparel and accessories",
                            DiscountActive = false,
                            DiscountPercentage = 0m,
                            DisplayOrder = 0L,
                            Guid = new Guid("c36c66b2-4df4-4f28-960b-9e200047f544"),
                            Name = "Clothing",
                            ShowInMenu = true
                        });
                });

            modelBuilder.Entity("Data.Model.SiteCategory.ChildCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DiscountActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowInMenu")
                        .HasColumnType("bit");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("ChildCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7514),
                            Deleted = false,
                            Description = "Latest smartphones",
                            DiscountActive = false,
                            DiscountPercentage = 0m,
                            DisplayOrder = 0L,
                            Guid = new Guid("d7762590-4700-457a-a46a-defde0bb3e68"),
                            Name = "Smartphones",
                            ShowInMenu = true,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7519),
                            Deleted = false,
                            Description = "Casual shirts for men",
                            DiscountActive = false,
                            DiscountPercentage = 0m,
                            DisplayOrder = 0L,
                            Guid = new Guid("a1e0563c-2b67-4085-ada0-aef95c2cddc0"),
                            Name = "Casual Shirts",
                            ShowInMenu = true,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7521),
                            Deleted = false,
                            Description = "High-performance laptops for gaming",
                            DiscountActive = false,
                            DiscountPercentage = 0m,
                            DisplayOrder = 0L,
                            Guid = new Guid("eafcf358-5048-4dc4-a960-217377decd74"),
                            Name = "Gaming Laptops",
                            ShowInMenu = true,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7523),
                            Deleted = false,
                            Description = "Elegant formal wear for women",
                            DiscountActive = false,
                            DiscountPercentage = 0m,
                            DisplayOrder = 0L,
                            Guid = new Guid("ab99e805-4ae0-4d61-b9e3-79f93ed7b7c4"),
                            Name = "Formal Dresses",
                            ShowInMenu = true,
                            SubCategoryId = 4
                        });
                });

            modelBuilder.Entity("Data.Model.SiteCategory.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DiscountActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowInMenu")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CategoryId = 1,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7483),
                            Deleted = false,
                            Description = "Smartphones and accessories",
                            DiscountActive = false,
                            DiscountPercentage = 0m,
                            DisplayOrder = 0L,
                            Guid = new Guid("957c1479-a8c0-43b8-b91f-1a968f47fb50"),
                            Name = "Mobile Phones",
                            ShowInMenu = true
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CategoryId = 2,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7490),
                            Deleted = false,
                            Description = "Clothing for men",
                            DiscountActive = false,
                            DiscountPercentage = 0m,
                            DisplayOrder = 0L,
                            Guid = new Guid("26adc5d4-0836-4d8e-9668-8aed153fca8e"),
                            Name = "Men's Wear",
                            ShowInMenu = true
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CategoryId = 1,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7492),
                            Deleted = false,
                            Description = "All kinds of laptops",
                            DiscountActive = false,
                            DiscountPercentage = 0m,
                            DisplayOrder = 0L,
                            Guid = new Guid("b9a5ae7e-685e-4731-af52-98f557f90e47"),
                            Name = "Laptops",
                            ShowInMenu = true
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CategoryId = 2,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7494),
                            Deleted = false,
                            Description = "Clothing for women",
                            DiscountActive = false,
                            DiscountPercentage = 0m,
                            DisplayOrder = 0L,
                            Guid = new Guid("c508cc6c-ddff-4e65-b337-61e9a039b39f"),
                            Name = "Women's Wear",
                            ShowInMenu = true
                        });
                });

            modelBuilder.Entity("Data.Model.UrlManagement.UrlManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ShortUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShortUrls");
                });

            modelBuilder.Entity("Data.UserManagement.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EncryptedPassword")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(7447),
                            Deleted = false,
                            DisplayOrder = 1L,
                            EmailAddress = "gts@gtechnosoft.com",
                            EncryptedPassword = "AMSKey:weDgQGCQK/TaXVsHiIg8QA==;gmHS/OkZJS8IwuRpBxCz6Q==",
                            FullName = "system",
                            Guid = new Guid("7a220c15-5029-474c-8f6c-51ea44e68a17"),
                            LastLogin = new DateTime(2024, 8, 26, 9, 43, 6, 719, DateTimeKind.Utc).AddTicks(7354),
                            MobileNumber = "03063888546",
                            RefreshToken = "/mqqFOu4TT5rZ5xkcQ9jTI1iXFaSBNcZLOx01BaQ1gcRY7dEAEv00BdlqWGHm1ylSbWqSqQooh8NrndY1VJilg==",
                            RefreshTokenExpiryTime = new DateTime(2024, 8, 27, 9, 43, 6, 719, DateTimeKind.Utc).AddTicks(7434),
                            UserRoleId = 1
                        });
                });

            modelBuilder.Entity("Data.UserManagement.UserHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Browser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Device")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperatingSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserHistories");
                });

            modelBuilder.Entity("Data.UserManagement.UserPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessList")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NavigationUrl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("ShowInMenu")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserPermissionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserPermissionId");

                    b.ToTable("UserPermissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessList = "Allowed",
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5546),
                            Deleted = false,
                            DisplayOrder = 1L,
                            Guid = new Guid("048824ed-dabb-450c-b70b-5a1834589583"),
                            Icon = "fa-solid fa-table-cells-large",
                            NavigationUrl = "/Home/Index",
                            ShowInMenu = true,
                            Title = "Dashboard"
                        },
                        new
                        {
                            Id = 2,
                            AccessList = "Allowed",
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5551),
                            Deleted = false,
                            DisplayOrder = 2L,
                            Guid = new Guid("f1b416d2-f305-40a6-a116-c8e802a33f69"),
                            Icon = "fas fa-user-cog",
                            NavigationUrl = "#",
                            ShowInMenu = true,
                            Title = "User Management"
                        },
                        new
                        {
                            Id = 3,
                            AccessList = "Allowed,Active,List,Add,Edit,Delete",
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5554),
                            Deleted = false,
                            DisplayOrder = 3L,
                            Guid = new Guid("12b76be4-0a97-4b7c-ad84-dab236aa32ad"),
                            NavigationUrl = "/UserMgmt/User/UserList",
                            ShowInMenu = true,
                            Title = "System Users",
                            UserPermissionId = 2
                        },
                        new
                        {
                            Id = 4,
                            AccessList = "Allowed,Active,List,DisplayOrder,Add,Edit,Delete",
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5556),
                            Deleted = false,
                            DisplayOrder = 4L,
                            Guid = new Guid("94d0145e-3e68-433f-b28f-7a0cb49d68b9"),
                            NavigationUrl = "/UserMgmt/Role/RoleList",
                            ShowInMenu = true,
                            Title = "System Roles",
                            UserPermissionId = 2
                        },
                        new
                        {
                            Id = 5,
                            AccessList = "Allowed,Active,List,DisplayOrder,Add,Edit,Delete",
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5558),
                            Deleted = false,
                            DisplayOrder = 5L,
                            Guid = new Guid("26e87503-adf7-475e-b509-d537425a34bb"),
                            NavigationUrl = "/UserMgmt/Permission/PermissionList",
                            ShowInMenu = true,
                            Title = "System Permissions",
                            UserPermissionId = 2
                        },
                        new
                        {
                            Id = 6,
                            AccessList = "Allowed",
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5561),
                            Deleted = false,
                            DisplayOrder = 6L,
                            Guid = new Guid("74bfec56-5fae-4766-b5a1-effcb6ba4c57"),
                            Icon = "fa-solid fa-table-cells-large",
                            NavigationUrl = "#",
                            ShowInMenu = true,
                            Title = "Categories Menu"
                        },
                        new
                        {
                            Id = 7,
                            AccessList = "Allowed,Active,List,Add,Edit,Delete",
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5563),
                            Deleted = false,
                            DisplayOrder = 7L,
                            Guid = new Guid("ae66b9d5-44bc-47ae-b8af-35d9ffc4f226"),
                            NavigationUrl = "/Category/CategoryList",
                            ShowInMenu = true,
                            Title = "Category",
                            UserPermissionId = 6
                        },
                        new
                        {
                            Id = 8,
                            AccessList = "Allowed,Active,List,Add,Edit,Delete",
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5565),
                            Deleted = false,
                            DisplayOrder = 8L,
                            Guid = new Guid("f2aed64b-9d52-41b0-9e79-e9d619564820"),
                            NavigationUrl = "/SubCategory/SubCategoryList",
                            ShowInMenu = true,
                            Title = "Sub Category",
                            UserPermissionId = 6
                        },
                        new
                        {
                            Id = 9,
                            AccessList = "Allowed,Active,List,Add,Edit,Delete",
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5569),
                            Deleted = false,
                            DisplayOrder = 9L,
                            Guid = new Guid("ba34982a-fbed-442f-8653-996104d02d85"),
                            NavigationUrl = "/ChildCategory/ChildCategoryList",
                            ShowInMenu = true,
                            Title = "Child Category",
                            UserPermissionId = 6
                        },
                        new
                        {
                            Id = 10,
                            AccessList = "Allowed",
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5571),
                            Deleted = false,
                            DisplayOrder = 10L,
                            Guid = new Guid("47d706ec-7670-489a-a787-146a2301a800"),
                            NavigationUrl = "#",
                            ShowInMenu = true,
                            Title = "General Setting"
                        },
                        new
                        {
                            Id = 11,
                            AccessList = "Allowed,Active,List,Add,Edit,Delete",
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5573),
                            Deleted = false,
                            DisplayOrder = 11L,
                            Guid = new Guid("eaf46c44-3270-4fb5-8ef0-f34f4498eeac"),
                            NavigationUrl = "/PriceTypeCategory/PriceTypeCategoryList",
                            ShowInMenu = true,
                            Title = "Price Type Category",
                            UserPermissionId = 10
                        },
                        new
                        {
                            Id = 12,
                            AccessList = "Allowed,Active,List,Add,Edit,Delete",
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5598),
                            Deleted = false,
                            DisplayOrder = 12L,
                            Guid = new Guid("fb471011-0270-4971-9b9e-7f07188ad02a"),
                            NavigationUrl = "/PriceType/PriceTypeList",
                            ShowInMenu = true,
                            Title = "Price Type",
                            UserPermissionId = 10
                        },
                        new
                        {
                            Id = 13,
                            AccessList = "Allowed,Active,List,Add,Edit,Delete",
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5601),
                            Deleted = false,
                            DisplayOrder = 13L,
                            Guid = new Guid("d74151f1-df3c-4690-be44-bda8bd8690f0"),
                            NavigationUrl = "/ProductPrice/ProductPriceList",
                            ShowInMenu = true,
                            Title = "Product Price",
                            UserPermissionId = 10
                        },
                        new
                        {
                            Id = 14,
                            AccessList = "Allowed",
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5603),
                            Deleted = false,
                            DisplayOrder = 14L,
                            Guid = new Guid("e267d60d-b041-4513-ac35-77a649e7ff25"),
                            NavigationUrl = "/SalesReport/SalesReportList",
                            ShowInMenu = true,
                            Title = "Sales Report"
                        },
                        new
                        {
                            Id = 15,
                            AccessList = "Allowed",
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5605),
                            Deleted = false,
                            DisplayOrder = 15L,
                            Guid = new Guid("2109a3a8-b97b-4b64-a080-d7a2e68e62cd"),
                            NavigationUrl = "#",
                            ShowInMenu = true,
                            Title = "Inventory Management"
                        },
                        new
                        {
                            Id = 16,
                            AccessList = "Allowed,Active,List,Add,Edit,Delete",
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5608),
                            Deleted = false,
                            DisplayOrder = 16L,
                            Guid = new Guid("bb3e51cd-d85e-4b33-abf8-d99b38c73e45"),
                            NavigationUrl = "/Supplier/SupplierList",
                            ShowInMenu = true,
                            Title = "Suppliers",
                            UserPermissionId = 15
                        },
                        new
                        {
                            Id = 17,
                            AccessList = "Allowed,Active,List,Add,Edit,Delete",
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5611),
                            Deleted = false,
                            DisplayOrder = 17L,
                            Guid = new Guid("be5b8044-09ad-44cf-802c-b7e61b614d74"),
                            NavigationUrl = "/InventoryItem/InventoryItemList",
                            ShowInMenu = true,
                            Title = "Inventory Item",
                            UserPermissionId = 15
                        },
                        new
                        {
                            Id = 18,
                            AccessList = "Allowed,Active,List,Add,Edit,Delete",
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5614),
                            Deleted = false,
                            DisplayOrder = 18L,
                            Guid = new Guid("bd70c28f-1bda-46ef-997c-6bb487c2c9d5"),
                            NavigationUrl = "/Stock/StockList",
                            ShowInMenu = true,
                            Title = "Stock",
                            UserPermissionId = 15
                        });
                });

            modelBuilder.Entity("Data.UserManagement.UserRefreshToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("UserRefreshTokens");
                });

            modelBuilder.Entity("Data.UserManagement.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserRoleTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleTypeId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5511),
                            Deleted = false,
                            DisplayOrder = 1L,
                            Guid = new Guid("2bd9b32b-862a-42a4-ac43-fa3245c3c437"),
                            Name = "Root",
                            UserRoleTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5513),
                            Deleted = false,
                            DisplayOrder = 2L,
                            Guid = new Guid("0c79fb4e-278d-4bd2-b048-22274f3fd84f"),
                            Name = "Administrator",
                            UserRoleTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5516),
                            Deleted = false,
                            DisplayOrder = 3L,
                            Guid = new Guid("ed0c5443-f194-49b9-8f95-ebf353239eb0"),
                            Name = "Supervisor",
                            UserRoleTypeId = 3
                        });
                });

            modelBuilder.Entity("Data.UserManagement.UserRolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AllowActive")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowDisplayOrder")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowList")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowView")
                        .HasColumnType("bit");

                    b.Property<bool>("Allowed")
                        .HasColumnType("bit");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<long>("UserPermissionId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserRoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRolePermissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllowActive = true,
                            AllowAdd = true,
                            AllowDelete = true,
                            AllowDisplayOrder = true,
                            AllowEdit = true,
                            AllowList = true,
                            AllowView = true,
                            Allowed = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5694),
                            Deleted = false,
                            Guid = new Guid("04457953-f36e-4f00-8c2e-c4773ae1072d"),
                            UserPermissionId = 1L,
                            UserRoleId = 1L
                        },
                        new
                        {
                            Id = 2,
                            AllowActive = true,
                            AllowAdd = true,
                            AllowDelete = true,
                            AllowDisplayOrder = true,
                            AllowEdit = true,
                            AllowList = true,
                            AllowView = true,
                            Allowed = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5704),
                            Deleted = false,
                            Guid = new Guid("c161e0c5-047b-41ae-95de-5f81a75adc51"),
                            UserPermissionId = 2L,
                            UserRoleId = 1L
                        },
                        new
                        {
                            Id = 3,
                            AllowActive = true,
                            AllowAdd = true,
                            AllowDelete = true,
                            AllowDisplayOrder = true,
                            AllowEdit = true,
                            AllowList = true,
                            AllowView = true,
                            Allowed = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5711),
                            Deleted = false,
                            Guid = new Guid("d4019776-13af-420c-8a54-69f176885a6c"),
                            UserPermissionId = 3L,
                            UserRoleId = 1L
                        },
                        new
                        {
                            Id = 4,
                            AllowActive = true,
                            AllowAdd = true,
                            AllowDelete = true,
                            AllowDisplayOrder = true,
                            AllowEdit = true,
                            AllowList = true,
                            AllowView = true,
                            Allowed = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5747),
                            Deleted = false,
                            Guid = new Guid("d8cfe49b-9da7-4b9c-9305-bb78f0d8d1f8"),
                            UserPermissionId = 4L,
                            UserRoleId = 1L
                        },
                        new
                        {
                            Id = 5,
                            AllowActive = true,
                            AllowAdd = true,
                            AllowDelete = true,
                            AllowDisplayOrder = true,
                            AllowEdit = true,
                            AllowList = true,
                            AllowView = true,
                            Allowed = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5754),
                            Deleted = false,
                            Guid = new Guid("e6ada5d8-96a4-45cd-8677-7bb59b6cc65d"),
                            UserPermissionId = 5L,
                            UserRoleId = 1L
                        },
                        new
                        {
                            Id = 6,
                            AllowActive = true,
                            AllowAdd = true,
                            AllowDelete = true,
                            AllowDisplayOrder = true,
                            AllowEdit = true,
                            AllowList = true,
                            AllowView = true,
                            Allowed = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5762),
                            Deleted = false,
                            Guid = new Guid("2176fcc1-61e3-4655-a065-b614f6a229d1"),
                            UserPermissionId = 6L,
                            UserRoleId = 1L
                        },
                        new
                        {
                            Id = 7,
                            AllowActive = true,
                            AllowAdd = true,
                            AllowDelete = true,
                            AllowDisplayOrder = true,
                            AllowEdit = true,
                            AllowList = true,
                            AllowView = true,
                            Allowed = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5768),
                            Deleted = false,
                            Guid = new Guid("d14631bb-e591-4425-a932-4928d639b678"),
                            UserPermissionId = 7L,
                            UserRoleId = 1L
                        },
                        new
                        {
                            Id = 8,
                            AllowActive = true,
                            AllowAdd = true,
                            AllowDelete = true,
                            AllowDisplayOrder = true,
                            AllowEdit = true,
                            AllowList = true,
                            AllowView = true,
                            Allowed = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5778),
                            Deleted = false,
                            Guid = new Guid("bd22c9a6-cb26-4393-b215-266ccf971e87"),
                            UserPermissionId = 8L,
                            UserRoleId = 1L
                        },
                        new
                        {
                            Id = 9,
                            AllowActive = true,
                            AllowAdd = true,
                            AllowDelete = true,
                            AllowDisplayOrder = true,
                            AllowEdit = true,
                            AllowList = true,
                            AllowView = true,
                            Allowed = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5785),
                            Deleted = false,
                            Guid = new Guid("30cc18e4-2201-4c24-94a1-80b48b62a577"),
                            UserPermissionId = 9L,
                            UserRoleId = 1L
                        },
                        new
                        {
                            Id = 10,
                            AllowActive = true,
                            AllowAdd = true,
                            AllowDelete = true,
                            AllowDisplayOrder = true,
                            AllowEdit = true,
                            AllowList = true,
                            AllowView = true,
                            Allowed = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5792),
                            Deleted = false,
                            Guid = new Guid("3b235bfa-3e89-42b2-8485-937eb49135fa"),
                            UserPermissionId = 10L,
                            UserRoleId = 1L
                        },
                        new
                        {
                            Id = 11,
                            AllowActive = true,
                            AllowAdd = true,
                            AllowDelete = true,
                            AllowDisplayOrder = true,
                            AllowEdit = true,
                            AllowList = true,
                            AllowView = true,
                            Allowed = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5799),
                            Deleted = false,
                            Guid = new Guid("9771c41b-3160-412d-9b91-47a0e027304a"),
                            UserPermissionId = 11L,
                            UserRoleId = 1L
                        },
                        new
                        {
                            Id = 12,
                            AllowActive = true,
                            AllowAdd = true,
                            AllowDelete = true,
                            AllowDisplayOrder = true,
                            AllowEdit = true,
                            AllowList = true,
                            AllowView = true,
                            Allowed = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5805),
                            Deleted = false,
                            Guid = new Guid("d113f1fa-62b9-4b28-a543-0eff4dc6749e"),
                            UserPermissionId = 12L,
                            UserRoleId = 1L
                        },
                        new
                        {
                            Id = 13,
                            AllowActive = true,
                            AllowAdd = true,
                            AllowDelete = true,
                            AllowDisplayOrder = true,
                            AllowEdit = true,
                            AllowList = true,
                            AllowView = true,
                            Allowed = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5811),
                            Deleted = false,
                            Guid = new Guid("f3cbfb94-e673-427f-9ecc-a2e54e779bb2"),
                            UserPermissionId = 13L,
                            UserRoleId = 1L
                        },
                        new
                        {
                            Id = 14,
                            AllowActive = true,
                            AllowAdd = true,
                            AllowDelete = true,
                            AllowDisplayOrder = true,
                            AllowEdit = true,
                            AllowList = true,
                            AllowView = true,
                            Allowed = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5817),
                            Deleted = false,
                            Guid = new Guid("2b23133e-acdf-4ea6-9d49-c06f95800654"),
                            UserPermissionId = 14L,
                            UserRoleId = 1L
                        },
                        new
                        {
                            Id = 15,
                            AllowActive = true,
                            AllowAdd = true,
                            AllowDelete = true,
                            AllowDisplayOrder = true,
                            AllowEdit = true,
                            AllowList = true,
                            AllowView = true,
                            Allowed = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5824),
                            Deleted = false,
                            Guid = new Guid("7d02531e-14ac-4f00-8488-7e6164dcf935"),
                            UserPermissionId = 15L,
                            UserRoleId = 1L
                        },
                        new
                        {
                            Id = 16,
                            AllowActive = true,
                            AllowAdd = true,
                            AllowDelete = true,
                            AllowDisplayOrder = true,
                            AllowEdit = true,
                            AllowList = true,
                            AllowView = true,
                            Allowed = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5832),
                            Deleted = false,
                            Guid = new Guid("2cd78804-da09-47ce-b846-6d16cbbcea00"),
                            UserPermissionId = 16L,
                            UserRoleId = 1L
                        },
                        new
                        {
                            Id = 17,
                            AllowActive = true,
                            AllowAdd = true,
                            AllowDelete = true,
                            AllowDisplayOrder = true,
                            AllowEdit = true,
                            AllowList = true,
                            AllowView = true,
                            Allowed = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5838),
                            Deleted = false,
                            Guid = new Guid("7c52d2dc-57b3-4deb-b897-94cc3aa8cfbb"),
                            UserPermissionId = 17L,
                            UserRoleId = 1L
                        },
                        new
                        {
                            Id = 18,
                            AllowActive = true,
                            AllowAdd = true,
                            AllowDelete = true,
                            AllowDisplayOrder = true,
                            AllowEdit = true,
                            AllowList = true,
                            AllowView = true,
                            Allowed = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5845),
                            Deleted = false,
                            Guid = new Guid("ad1fe875-29d9-471a-a3ce-9379878d2af6"),
                            UserPermissionId = 18L,
                            UserRoleId = 1L
                        });
                });

            modelBuilder.Entity("Data.UserManagement.UserRoleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UserRoleTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5436),
                            Deleted = false,
                            DisplayOrder = 0L,
                            Guid = new Guid("2deb65c6-a7e5-4c3c-aa18-9b87efdf3dcc"),
                            Name = "Root"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5471),
                            Deleted = false,
                            DisplayOrder = 0L,
                            Guid = new Guid("039230a9-53c6-48bd-8ae5-14d2df7b65a4"),
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5473),
                            Deleted = false,
                            DisplayOrder = 0L,
                            Guid = new Guid("0e42f0c9-1dec-4162-90ea-228932bda73a"),
                            Name = "Content Manager"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedOn = new DateTime(2024, 8, 26, 14, 43, 6, 719, DateTimeKind.Local).AddTicks(5475),
                            Deleted = false,
                            DisplayOrder = 0L,
                            Guid = new Guid("f64073fb-0cf1-46d7-aa10-64f843ca0a73"),
                            Name = "Account Department"
                        });
                });

            modelBuilder.Entity("Data.Model.General.OrderItem", b =>
                {
                    b.HasOne("Data.Model.General.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Data.Model.General.PriceType", b =>
                {
                    b.HasOne("Data.Model.General.PriceTypeCategory", "PriceTypeCategory")
                        .WithMany("PriceTypes")
                        .HasForeignKey("PriceTypeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriceTypeCategory");
                });

            modelBuilder.Entity("Data.Model.General.PriceTypeCategory", b =>
                {
                    b.HasOne("Data.Model.SiteCategory.ChildCategory", "ChildCategory")
                        .WithMany("PriceTypeCategories")
                        .HasForeignKey("ChildCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildCategory");
                });

            modelBuilder.Entity("Data.Model.General.ProductPrice", b =>
                {
                    b.HasOne("Data.Model.SiteCategory.ChildCategory", "ChildCategories")
                        .WithMany("ProductPrices")
                        .HasForeignKey("ChildCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Model.General.PriceTypeCategory", "PriceTypeCategory")
                        .WithMany("ProductPrices")
                        .HasForeignKey("PriceTypeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Model.General.PriceType", "PriceTypes")
                        .WithMany()
                        .HasForeignKey("PriceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildCategories");

                    b.Navigation("PriceTypeCategory");

                    b.Navigation("PriceTypes");
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.Ingredient", b =>
                {
                    b.HasOne("Data.Model.SiteCategory.ChildCategory", "ChildCategory")
                        .WithMany()
                        .HasForeignKey("ChildCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Model.InventoryManagement.InventoryItem", "InventoryItem")
                        .WithMany("Ingredients")
                        .HasForeignKey("InventoryItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildCategory");

                    b.Navigation("InventoryItem");
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.InventoryItem", b =>
                {
                    b.HasOne("Data.Model.InventoryManagement.Supplier", "Supplier")
                        .WithMany("InventoryItems")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.InventoryTransaction", b =>
                {
                    b.HasOne("Data.Model.InventoryManagement.InventoryItem", null)
                        .WithMany("InventoryTransactions")
                        .HasForeignKey("InventoryItemId");
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.Recipe", b =>
                {
                    b.HasOne("Data.Model.InventoryManagement.InventoryItem", "InventoryItem")
                        .WithMany("Recipes")
                        .HasForeignKey("InventoryItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventoryItem");
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.RecipeIngredient", b =>
                {
                    b.HasOne("Data.Model.InventoryManagement.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Model.InventoryManagement.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.Stock", b =>
                {
                    b.HasOne("Data.Model.InventoryManagement.InventoryItem", "InventoryItem")
                        .WithMany()
                        .HasForeignKey("InventoryItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventoryItem");
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.SupplierItem", b =>
                {
                    b.HasOne("Data.Model.InventoryManagement.Supplier", "Supplier")
                        .WithMany("SupplierItems")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Data.Model.SiteCategory.ChildCategory", b =>
                {
                    b.HasOne("Data.Model.SiteCategory.SubCategory", "SubCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Data.Model.SiteCategory.SubCategory", b =>
                {
                    b.HasOne("Data.Model.SiteCategory.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Data.UserManagement.User", b =>
                {
                    b.HasOne("Data.UserManagement.UserRole", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleId");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Data.UserManagement.UserHistory", b =>
                {
                    b.HasOne("Data.UserManagement.User", "SystemUser")
                        .WithMany("UserHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SystemUser");
                });

            modelBuilder.Entity("Data.UserManagement.UserPermission", b =>
                {
                    b.HasOne("Data.UserManagement.UserPermission", "ParentPermission")
                        .WithMany("ChildPermissions")
                        .HasForeignKey("UserPermissionId");

                    b.Navigation("ParentPermission");
                });

            modelBuilder.Entity("Data.UserManagement.UserRole", b =>
                {
                    b.HasOne("Data.UserManagement.UserRoleType", "RoleType")
                        .WithMany("Roles")
                        .HasForeignKey("UserRoleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoleType");
                });

            modelBuilder.Entity("Data.UserManagement.UserRolePermission", b =>
                {
                    b.HasOne("Data.UserManagement.UserPermission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId");

                    b.HasOne("Data.UserManagement.UserRole", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Data.Model.General.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Data.Model.General.PriceTypeCategory", b =>
                {
                    b.Navigation("PriceTypes");

                    b.Navigation("ProductPrices");
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.InventoryItem", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("InventoryTransactions");

                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("Data.Model.InventoryManagement.Supplier", b =>
                {
                    b.Navigation("InventoryItems");

                    b.Navigation("SupplierItems");
                });

            modelBuilder.Entity("Data.Model.SiteCategory.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Data.Model.SiteCategory.ChildCategory", b =>
                {
                    b.Navigation("PriceTypeCategories");

                    b.Navigation("ProductPrices");
                });

            modelBuilder.Entity("Data.Model.SiteCategory.SubCategory", b =>
                {
                    b.Navigation("ChildCategories");
                });

            modelBuilder.Entity("Data.UserManagement.User", b =>
                {
                    b.Navigation("UserHistories");
                });

            modelBuilder.Entity("Data.UserManagement.UserPermission", b =>
                {
                    b.Navigation("ChildPermissions");

                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("Data.UserManagement.UserRole", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Data.UserManagement.UserRoleType", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}